1、try: 
   except:
   else:
指无异常发生时，执行else后的语句

2、try:
   finally:

2.1、 如果try语句没有捕获错误，代码执行finally后的语句
2.2、 如果try语句捕获错误，程序首先执行finally后的语句，然后将捕获的错误交给python解释器
finally作用：为异常处理事件提供清理机制，用来关闭文件或者释放资源；

3、try：
   except:
   finally:
如果没有异常，就直接执行finally,
如果有异常首先执行except处理错误，然后执行finally


4、with语句实质是上下文管理：
	4.1、上下文管理协议：包含方法__enter__()和__exit__(),支持	该协议的对象要实现的这两个方法；
	4.2、上下文管理器：定义执行with语句时要建立的运行时上下文	，负责执行with语句块上下文中的进入与推出操作；
 	4.3、 进入上下文管理器：调用管理器__enter__()方法，如果设置as var 语句，var变量接受






5、assert语句：
	断言语句：assert语句用于检测表达式是否为真，如果为假，引发	AssertionError错误；
	语法格式：assert expression [,args] args是异常描述